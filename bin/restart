#!/usr/bin/env bash


THIS_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null 2>&1 && pwd )";
NEW_PROC_PID="";


kill_node_instances() {
  # grep is not feature complete on the share system (missing flags
  # like "-o") and we don't have pgrep, so we will use basic grep/
  # awk features to capture running node instances.
  node_instances="$(ps -ef | awk '/node/ {print $2}')";

  if [[ -z "$node_instances" ]]; then
    printf "No running Node instances found.\n"
  else
    printf "Existing node processes found.\n"
    printf "Killing $(echo $node_instances | wc -w | awk '{$1=$1};1') PIDs...\n";
    for pid in $node_instances; do kill -9 $pid; done
  fi
}


# Start a script as a background process. Expects the first argument to
# be a Bash command to execute. The background process is started with
# the "&" character.
start_script() {
  export NODE_ENV=production;
  export NODE_PORT=3000;

  node_script="node $THIS_DIR/prod";
  printf "Starting Node server in background...\n";
  
  # Start script.
  eval $node_script;

  return 0;
}


main () {
  # Get all active node instances
  kill_node_instances;
  start_script;
  exit 0;
}



main "$@"