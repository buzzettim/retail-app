#!/usr/bin/env node
/**
 * @module prod
 * @fileoverview Module to start a production node server with some bindings built in.
 */

// DO NOT EDIT DIRECTLY!
// This module contains functions both auto-generated and hand-written. Only
// edit this module if you know what you are doing and you are sure of what you
// will be adding/changing/removing.

// Module dependencies.
const path = require('path');
const forever = require('forever');
const { Monitor } = require('forever-monitor');

// Forever config
const config = require('../forever.config');


console.log('Process environment running in: ', process.env.NODE_ENV);


/**
 * Listen on provided port, on all network interfaces.
*/
if (process.env.NODE_ENV.startsWith('prod')) {
  const child = new (Monitor)(path.join(__dirname, 'www'), config);

  child.on('start', (proc, data) => {
    console.log(`Started process with proc: ... and data ${data}`);
  });

  child.on('watch:restart', (info) => {
    console.info(`Restarting script because ${info.file} changed`);
  });

  child.on('restart', () => {
    console.info(`Forever restarting script... Executed ${child.times} time(s) now.`);
  });

  child.on('error', (err) => {
    console.error('Error caught on child process in server: ');
    console.error(err);
  });

  child.on('exit:code', (statusCode) => {
    console.error(`Forever detected script exited with code: ${statusCode}`);
  });

  // child.start();
  console.log('New process started on port: ', process.env.NODE_PORT, 'with PID: ', forever.startDaemon(child).pid);
}
